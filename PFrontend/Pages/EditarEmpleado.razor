@page "/empleados/editar/{id:int}"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IJSRuntime JS
@using PFrontend.Models
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components

<style>
    .editar-bg {
        min-height: 100vh;
        background: linear-gradient(135deg, #232945 0%, #3949AB 100%);
        padding: 0;
        margin: 0;
    }

    .editar-card {
        background: #fff;
        border-radius: 1.5rem;
        box-shadow: 0 4px 32px rgba(50, 50, 93, 0.13);
        max-width: 540px;
        width: 98vw;
        margin: 2.5rem auto;
        padding: 2.5rem 2rem 2rem 2rem;
        position: relative;
    }

    .editar-title {
        color: #232945;
        font-weight: 700;
        margin-bottom: 2rem;
        text-align: center;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: .7rem;
    }

    .btn-guardar {
        background: #3949AB;
        color: #fff;
        border-radius: 8px;
        border: none;
        font-weight: 600;
        transition: background .2s, color .2s;
        padding: .5rem 1.1rem;
        box-shadow: 0 2px 10px #23294522;
        display: inline-flex;
        align-items: center;
        gap: .4rem;
    }

        .btn-guardar:hover, .btn-guardar:focus {
            background: #232945;
            color: #FFB300;
        }

    .btn-cancelar {
        background: #FFB300;
        color: #232945;
        border: none;
        border-radius: 8px;
        font-weight: 600;
        margin-left: 0.5rem;
        padding: .5rem 1.1rem;
        transition: background .2s;
    }

        .btn-cancelar:hover {
            background: #ffe49c;
            color: #232945;
        }

    .btn-regresar {
        display: inline-flex;
        align-items: center;
        gap: .4rem;
        background: #3949AB;
        color: #fff;
        border: none;
        border-radius: 1.5rem;
        padding: 0.55rem 1.5rem;
        font-weight: 600;
        font-size: 1rem;
        margin: 0 0 1.4rem 0;
        cursor: pointer;
        transition: background 0.2s, color 0.2s;
        box-shadow: 0 2px 10px rgba(57,73,171,0.08);
        position: absolute;
        left: 1.2rem;
        top: 1.2rem;
        z-index: 5;
    }

        .btn-regresar:hover, .btn-regresar:focus {
            background: #232945;
            color: #fff;
            text-decoration: none;
        }

    .form-label {
        color: #3949AB;
        font-weight: 600;
    }

    .form-control:focus {
        border-color: #3949AB;
        box-shadow: 0 0 0 2px #3949AB33;
    }

    .icon-pencil {
        font-size: 2.1rem;
        color: #3949AB;
        background: #F5F6FA;
        border-radius: 50%;
        padding: .55rem;
    }
    media (max-width: 575px) {
        .editar-card

    {
        padding: 1.3rem 0.4rem 1rem 0.4rem;
        max-width: 99vw;
    }

    .btn-regresar {
        left: .4rem;
        top: .4rem;
        font-size: 1.6rem;
        padding: 0.45rem 1.15rem;
    }

    }
</style>

<div class="editar-bg">
    <div class="editar-card">
        <button class="btn-regresar" @onclick="Regresar" title="Regresar">
            <i class="bi bi-arrow-left"></i> Regresar
        </button>
        <div class="editar-title mb-2">
            <i class="bi bi-pencil-square icon-pencil"></i>
            Editar Empleado
        </div>
        @if (empleado == null)
        {
            <div class="d-flex align-items-center justify-content-center py-4">
                <div class="spinner-border text-primary me-2"></div>
                <span style="color:#3949AB;font-weight:600;">Cargando empleado...</span>
            </div>
        }
        else
        {
            <EditForm Model="empleado" OnValidSubmit="GuardarCambios">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label class="form-label">Nombre</label>
                    <InputText @bind-Value="empleado.Nombre" class="form-control" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Apellido</label>
                    <InputText @bind-Value="empleado.Apellido" class="form-control" />
                </div>
                <div class="mb-3">
                    <label class="form-label">DPI</label>
                    <InputText @bind-Value="empleado.Dpi" class="form-control" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Correo</label>
                    <InputText @bind-Value="empleado.Correo" class="form-control" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Salario</label>
                    <InputNumber @bind-Value="empleado.Salario" class="form-control" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Estado laboral</label>
                    <InputSelect @bind-Value="empleado.EstadoLaboral" class="form-control">
                        <option value="Activo">Activo</option>
                        <option value="Suspendido">Suspendido</option>
                        <option value="Retirado">Retirado</option>
                    </InputSelect>
                </div>
                <div class="mb-3">
                    <label class="form-label">Departamento</label>
                    <InputSelect @bind-Value="empleado.DepartamentoId" class="form-control">
                        <option value="">-- Selecciona un departamento --</option>
                        @foreach (var dep in departamentos)
                        {
                            <option value="@dep.Id">@dep.Nombre</option>
                        }
                    </InputSelect>
                </div>
                <div class="mb-3">
                    <label class="form-label">Puesto</label>
                    <InputSelect @bind-Value="empleado.PuestoId" class="form-control">
                        <option value="">-- Selecciona un puesto --</option>
                        @foreach (var pst in puestos)
                        {
                            <option value="@pst.Id">@pst.Nombre</option>
                        }
                    </InputSelect>
                </div>
                <button type="submit" class="btn-guardar">
                    <i class="bi bi-save"></i> Guardar cambios
                </button>
                <button type="button" class="btn-cancelar" @onclick='() => Navigation.NavigateTo("/empleados")'>
                    <i class="bi bi-x-circle"></i> Cancelar
                </button>
            </EditForm>
        }
    </div>
</div>

@code {
    [Parameter] public int id { get; set; }

    private Empleado? empleado;
    private List<DepartamentoModelV2> departamentos = new();
    private List<PuestoModelV2> puestos = new();

    private void Regresar()
    {
        Navigation.NavigateTo("/empleados");
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            departamentos = await Http.GetFromJsonAsync<List<DepartamentoModelV2>>("https://localhost:7185/api/Departamento") ?? new List<DepartamentoModelV2>();
            puestos = await Http.GetFromJsonAsync<List<PuestoModelV2>>("https://localhost:7185/api/Puesto") ?? new List<PuestoModelV2>();
            empleado = await Http.GetFromJsonAsync<Empleado>($"api/Empleados/{id}");
        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("alert", $"Error al cargar datos: {ex.Message}");
        }
    }

    private async Task GuardarCambios()
    {
        try
        {
            var response = await Http.PutAsJsonAsync($"api/Empleados/{id}", empleado);

            if (response.IsSuccessStatusCode)
            {
                await JS.InvokeVoidAsync("alert", "Empleado actualizado correctamente");
                Navigation.NavigateTo("/empleados");
            }
            else
            {
                await JS.InvokeVoidAsync("alert", $"Error al actualizar: {response.StatusCode}");
            }
        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("alert", $"Error inesperado: {ex.Message}");
        }
    }
}